name: 代码质量检查和测试

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:  # 允许手动触发

jobs:
  analyze:
    name: 静态代码分析
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: 设置Java环境
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '11'
      
      - name: 设置Flutter环境
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.10.0'
          channel: 'stable'
      
      - name: 缓存Pub依赖
        uses: actions/cache@v3
        with:
          path: |
            ${{ env.PUB_CACHE }}
            .dart_tool
            build
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: |
            ${{ runner.os }}-pub-
      
      - name: 获取依赖
        run: flutter pub get
      
      - name: 检查代码格式
        run: dart format --output=none --set-exit-if-changed .
      
      - name: 分析代码
        run: flutter analyze

      # 添加Node.js服务器代码检查
      - name: 设置Node.js环境
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          
      - name: 安装服务器依赖
        run: |
          cd server/mcp-new
          npm install
          
      - name: 检查服务器代码风格
        run: |
          cd server/mcp-new
          npx standard --fix src/**/*.js
          git diff --exit-code || (echo "代码风格问题未修复，请运行standard修复" && exit 1)

  test:
    name: 自动化测试
    needs: analyze
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: 设置Java环境
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '11'
      
      - name: 设置Flutter环境
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.10.0'
          channel: 'stable'
      
      - name: 缓存Pub依赖
        uses: actions/cache@v3
        with:
          path: |
            ${{ env.PUB_CACHE }}
            .dart_tool
            build
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: |
            ${{ runner.os }}-pub-
      
      - name: 获取依赖
        run: flutter pub get
      
      - name: 安装测试依赖
        run: sudo apt-get update && sudo apt-get install -y lcov
      
      - name: 运行单元测试
        run: flutter test --coverage
      
      - name: 生成HTML覆盖率报告
        run: |
          if [ -f "coverage/lcov.info" ]; then
            genhtml coverage/lcov.info -o coverage/html
          fi
      
      - name: 检查测试覆盖率
        run: |
          if [ -f "coverage/lcov.info" ]; then
            COVERAGE=$(lcov --summary coverage/lcov.info | grep "lines" | awk '{print $4}' | cut -d'%' -f1)
            echo "Test coverage: ${COVERAGE}%"
            
            # 暂时设置较低的覆盖率要求，随着测试增加可以提高
            if (( $(echo "${COVERAGE} < 30" | bc -l) )); then
              echo "测试覆盖率低于30%，请添加更多测试！"
              # 目前警告但不失败，后期可以设置为失败
              # exit 1
            fi
          else
            echo "覆盖率报告不存在！"
          fi
      
      - name: 上传测试覆盖率报告
        uses: codecov/codecov-action@v3
        with:
          file: coverage/lcov.info
          fail_ci_if_error: false
      
      - name: 上传HTML覆盖率报告
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: coverage-report
          path: coverage/html
          retention-days: 7 
          
  server-test:
    name: 服务器测试
    needs: analyze
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: 设置Node.js环境
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          
      - name: 安装服务器依赖
        run: |
          cd server/mcp-new
          npm install
          
      - name: 运行服务器语法测试
        run: |
          cd server/mcp-new
          node -c src/app.js
          echo "const test = () => { try { require('./src/services/voiceDiagnosisService'); require('./src/tools/voiceDatasetManager'); console.log('语法检查通过'); } catch(e) { console.error(e); process.exit(1); } }; test();" > test_syntax.js
          node test_syntax.js 