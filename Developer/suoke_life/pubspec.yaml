name: suoke_life
description: "索克生活APP - 现代生活（健康养生）管理平台"
# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# In Windows, build-name is used as the major, minor, and patch parts
# of the product and file versions while build-number is used as the build suffix.
version: 1.0.0+1

environment:
  sdk: '>=3.0.0 <4.0.0'
  flutter: ">=3.10.0"

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  flutter:
    sdk: flutter
  flutter_localizations:
    sdk: flutter
  
  # UI
  cupertino_icons: ^1.0.8
  flutter_svg: ^2.0.9
  lottie: ^3.1.0
  shimmer: ^3.0.0
  flutter_markdown: ^0.7.0
  cached_network_image: ^3.3.1
  flutter_staggered_grid_view: ^0.7.0
  
  # 状态管理
  flutter_riverpod: ^2.4.0
  riverpod_annotation: ^2.3.0
  
  # 路由
  auto_route: ^7.8.0
  
  # 网络和API
  dio: ^5.3.2
  http: ^1.1.0
  connectivity_plus: ^4.0.2
  
  # 本地存储
  sqflite: ^2.3.0
  path: ^1.8.3
  path_provider: ^2.1.5
  flutter_secure_storage: ^8.0.0
  shared_preferences: ^2.2.2
  
  # 工具
  intl: ^0.19.0
  uuid: ^4.5.1
  logger: ^2.0.1
  equatable: ^2.0.5
  meta: ^1.10.0
  dartz: ^0.10.1
  package_info_plus: ^5.0.1
  json_annotation: ^4.9.0
  
  # 数据可视化
  fl_chart: ^0.63.0
  syncfusion_flutter_charts: ^24.2.6
  graphview: ^1.2.0
  
  # 多媒体与多模态
  speech_to_text: ^6.3.0
  flutter_tts: ^4.2.2
  camera: ^0.10.5+2
  image_picker: ^1.0.0
  video_player: ^2.8.4
  record: ^5.0.4
  
  # AI与机器学习
  google_ml_kit: ^0.16.3
  # tflite_flutter: ^0.10.4
  
  # 位置服务
  geolocator: ^9.0.2
  
  # 通知
  flutter_local_notifications: ^15.1.0+1
  
  # 实时通信
  web_socket_channel: ^2.4.0
  # 暂时注释Firebase相关依赖，以解决iOS Pod安装问题
  # firebase_messaging: ^14.7.16
  flutter_launcher_icons: ^0.14.3
  image: ^4.5.3
  permission_handler: ^11.4.0
  flutter_dotenv: ^5.2.1

dev_dependencies:
  flutter_test:
    sdk: flutter
  integration_test:
    sdk: flutter

  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  flutter_lints: ^2.0.2
  
  # 代码生成
  build_runner: ^2.4.6
  auto_route_generator: ^7.3.0
  json_serializable: ^6.7.1
  retrofit_generator: ^8.1.0
  riverpod_generator: ^2.3.2
  sqflite_common_ffi: ^2.3.2+1
  mockito: ^5.4.2
  mocktail: ^1.0.4
  golden_toolkit: ^0.15.0
  network_image_mock: ^2.1.1
  collection: ^1.17.2

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter packages.
flutter:

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  assets:
    - assets/images/
    - assets/icons/
    - assets/animations/
    - assets/ml_models/
    - assets/data/
    - assets/datasets/
    - assets/images/avatars/

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/to/resolution-aware-images

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/to/asset-from-package

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  # fonts:
  #   - family: CustomFont
  #     fonts:
  #       - asset: assets/fonts/CustomFont-Regular.ttf
  #       - asset: assets/fonts/CustomFont-Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/to/font-from-package

# Flutter Launcher Icons 配置
flutter_launcher_icons:
  android: "launcher_icon"
  ios: true
  image_path: "assets/images/app_icon.jpg"
  image_path_ios: "assets/images/app_icon.jpg"
  remove_alpha_ios: true
  min_sdk_android: 21
  adaptive_icon_background: "#35BB78" # 索克绿色背景
  adaptive_icon_foreground: "assets/images/app_icon.jpg"
  web:
    generate: true
    image_path: "assets/images/app_icon.jpg"
    background_color: "#35BB78"
    theme_color: "#35BB78"
  windows:
    generate: true
    image_path: "assets/images/app_icon.jpg"
    icon_size: 48
  macos:
    generate: true
    image_path: "assets/images/app_icon.jpg"
